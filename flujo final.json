[
    {
        "id": "bc2e63c6b4e11390",
        "type": "tab",
        "label": "Dashboard Parqueadero 12 Slots",
        "disabled": false,
        "info": ""
    },
    {
        "id": "409741e6db59b7d9",
        "type": "mqtt in",
        "z": "bc2e63c6b4e11390",
        "name": "Sensor Slot 1",
        "topic": "parking/slot1",
        "qos": "2",
        "datatype": "auto",
        "broker": "2baa406d869cd04d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 190,
        "y": 80,
        "wires": [
            [
                "624f6db3fc8e2827"
            ]
        ]
    },
    {
        "id": "624f6db3fc8e2827",
        "type": "function",
        "z": "bc2e63c6b4e11390",
        "name": "Formatter Slot 1",
        "func": "// Normaliza el payload y a√±ade metadatos\nmsg.payload = {\n    slot: 1,\n    status: msg.payload,          // \"Ocupado\" o \"Libre\"\n    time: new Date().toISOString()\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 80,
        "wires": [
            [
                "cb3f2dd36bf2742e"
            ]
        ]
    },
    {
        "id": "3cba9dd7218f9f8f",
        "type": "mqtt in",
        "z": "bc2e63c6b4e11390",
        "name": "Sensor Slot 2",
        "topic": "parking/slot2",
        "qos": "2",
        "datatype": "auto",
        "broker": "2baa406d869cd04d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 190,
        "y": 140,
        "wires": [
            [
                "d7024c49fa57f8fd"
            ]
        ]
    },
    {
        "id": "d7024c49fa57f8fd",
        "type": "function",
        "z": "bc2e63c6b4e11390",
        "name": "Formatter Slot 2",
        "func": "msg.payload = {\n    slot: 2,\n    status: msg.payload,\n    time: new Date().toISOString()\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 140,
        "wires": [
            [
                "cb3f2dd36bf2742e"
            ]
        ]
    },
    {
        "id": "c80adcef412a9d7a",
        "type": "mqtt in",
        "z": "bc2e63c6b4e11390",
        "name": "Sensor Slot 3",
        "topic": "parking/slot3",
        "qos": "2",
        "datatype": "auto",
        "broker": "2baa406d869cd04d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 190,
        "y": 200,
        "wires": [
            [
                "f09b4a3ec7e4c289"
            ]
        ]
    },
    {
        "id": "f09b4a3ec7e4c289",
        "type": "function",
        "z": "bc2e63c6b4e11390",
        "name": "Formatter Slot 3",
        "func": "msg.payload = {\n    slot: 3,\n    status: msg.payload,\n    time: new Date().toISOString()\n};\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 200,
        "wires": [
            [
                "cb3f2dd36bf2742e"
            ]
        ]
    },
    {
        "id": "d9a2f5a74188c713",
        "type": "mqtt in",
        "z": "bc2e63c6b4e11390",
        "name": "Sensor Slot 4",
        "topic": "parking/slot4",
        "qos": "2",
        "datatype": "auto",
        "broker": "2baa406d869cd04d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 190,
        "y": 260,
        "wires": [
            [
                "914f04eb9a60b593"
            ]
        ]
    },
    {
        "id": "914f04eb9a60b593",
        "type": "function",
        "z": "bc2e63c6b4e11390",
        "name": "Formatter Slot 4",
        "func": "msg.payload = {\n    slot: 4,\n    status: msg.payload,\n    time: new Date().toISOString()\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 260,
        "wires": [
            [
                "cb3f2dd36bf2742e"
            ]
        ]
    },
    {
        "id": "3c55e034e712086a",
        "type": "mqtt in",
        "z": "bc2e63c6b4e11390",
        "name": "Sensor Slot 5",
        "topic": "parking/slot5",
        "qos": "2",
        "datatype": "auto",
        "broker": "2baa406d869cd04d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 190,
        "y": 320,
        "wires": [
            [
                "da81737c732a11f8"
            ]
        ]
    },
    {
        "id": "da81737c732a11f8",
        "type": "function",
        "z": "bc2e63c6b4e11390",
        "name": "Formatter Slot 5",
        "func": "msg.payload = {\n    slot: 5,\n    status: msg.payload,\n    time: new Date().toISOString()\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 320,
        "wires": [
            [
                "cb3f2dd36bf2742e"
            ]
        ]
    },
    {
        "id": "5c6a7f9fd780da02",
        "type": "mqtt in",
        "z": "bc2e63c6b4e11390",
        "name": "Sensor Slot 6",
        "topic": "parking/slot6",
        "qos": "2",
        "datatype": "auto",
        "broker": "2baa406d869cd04d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 190,
        "y": 380,
        "wires": [
            [
                "19dbfcf62593dff5"
            ]
        ]
    },
    {
        "id": "19dbfcf62593dff5",
        "type": "function",
        "z": "bc2e63c6b4e11390",
        "name": "Formatter Slot 6",
        "func": "msg.payload = {\n    slot: 6,\n    status: msg.payload,\n    time: new Date().toISOString()\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 380,
        "wires": [
            [
                "cb3f2dd36bf2742e"
            ]
        ]
    },
    {
        "id": "9ab85df5e2d24058",
        "type": "mqtt in",
        "z": "bc2e63c6b4e11390",
        "name": "Sensor Slot 7",
        "topic": "parking/slot7",
        "qos": "2",
        "datatype": "auto",
        "broker": "2baa406d869cd04d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 190,
        "y": 440,
        "wires": [
            [
                "b8e4a4f32ecb541c"
            ]
        ]
    },
    {
        "id": "b8e4a4f32ecb541c",
        "type": "function",
        "z": "bc2e63c6b4e11390",
        "name": "Formatter Slot 7",
        "func": "msg.payload = {\n    slot: 7,\n    status: msg.payload,\n    time: new Date().toISOString()\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 440,
        "wires": [
            [
                "cb3f2dd36bf2742e"
            ]
        ]
    },
    {
        "id": "6daa02bfaeb76ac0",
        "type": "mqtt in",
        "z": "bc2e63c6b4e11390",
        "name": "Sensor Slot 8",
        "topic": "parking/slot8",
        "qos": "2",
        "datatype": "auto",
        "broker": "2baa406d869cd04d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 190,
        "y": 500,
        "wires": [
            [
                "a971bb17392cdd71"
            ]
        ]
    },
    {
        "id": "a971bb17392cdd71",
        "type": "function",
        "z": "bc2e63c6b4e11390",
        "name": "Formatter Slot 8",
        "func": "msg.payload = {\n    slot: 8,\n    status: msg.payload,\n    time: new Date().toISOString()\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 500,
        "wires": [
            [
                "cb3f2dd36bf2742e"
            ]
        ]
    },
    {
        "id": "d8947b49da74d6cb",
        "type": "mqtt in",
        "z": "bc2e63c6b4e11390",
        "name": "Sensor Slot 9",
        "topic": "parking/slot9",
        "qos": "2",
        "datatype": "auto",
        "broker": "2baa406d869cd04d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 190,
        "y": 560,
        "wires": [
            [
                "2a5b9619c2b1ab07"
            ]
        ]
    },
    {
        "id": "2a5b9619c2b1ab07",
        "type": "function",
        "z": "bc2e63c6b4e11390",
        "name": "Formatter Slot 9",
        "func": "msg.payload = {\n    slot: 9,\n    status: msg.payload,\n    time: new Date().toISOString()\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 560,
        "wires": [
            [
                "cb3f2dd36bf2742e"
            ]
        ]
    },
    {
        "id": "e18506e313fc3eed",
        "type": "mqtt in",
        "z": "bc2e63c6b4e11390",
        "name": "Sensor Slot 10",
        "topic": "parking/slot10",
        "qos": "2",
        "datatype": "auto",
        "broker": "2baa406d869cd04d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 200,
        "y": 620,
        "wires": [
            [
                "4c6d85b3dd4d8773"
            ]
        ]
    },
    {
        "id": "4c6d85b3dd4d8773",
        "type": "function",
        "z": "bc2e63c6b4e11390",
        "name": "Formatter Slot 10",
        "func": "msg.payload = {\n    slot: 10,\n    status: msg.payload,\n    time: new Date().toISOString()\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 620,
        "wires": [
            [
                "cb3f2dd36bf2742e"
            ]
        ]
    },
    {
        "id": "40600b2e98a9746e",
        "type": "mqtt in",
        "z": "bc2e63c6b4e11390",
        "name": "Sensor Slot 11",
        "topic": "parking/slot11",
        "qos": "2",
        "datatype": "auto",
        "broker": "2baa406d869cd04d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 200,
        "y": 680,
        "wires": [
            [
                "0bc71d14a8e3f1c6"
            ]
        ]
    },
    {
        "id": "0bc71d14a8e3f1c6",
        "type": "function",
        "z": "bc2e63c6b4e11390",
        "name": "Formatter Slot 11",
        "func": "msg.payload = {\n    slot: 11,\n    status: msg.payload,\n    time: new Date().toISOString()\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 680,
        "wires": [
            [
                "cb3f2dd36bf2742e"
            ]
        ]
    },
    {
        "id": "ddc5c7f3d655e20d",
        "type": "mqtt in",
        "z": "bc2e63c6b4e11390",
        "name": "Sensor Slot 12",
        "topic": "parking/slot12",
        "qos": "2",
        "datatype": "auto",
        "broker": "2baa406d869cd04d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 200,
        "y": 740,
        "wires": [
            [
                "cb8bd777bc664ec8"
            ]
        ]
    },
    {
        "id": "cb8bd777bc664ec8",
        "type": "function",
        "z": "bc2e63c6b4e11390",
        "name": "Formatter Slot 12",
        "func": "msg.payload = {\n    slot: 12,\n    status: msg.payload,\n    time: new Date().toISOString()\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 740,
        "wires": [
            [
                "cb3f2dd36bf2742e"
            ]
        ]
    },
    {
        "id": "cb3f2dd36bf2742e",
        "type": "ui_template",
        "z": "bc2e63c6b4e11390",
        "group": "0e938a56db5f14f2",
        "name": "Vista Parqueadero 12 Slots",
        "order": 1,
        "width": "0",
        "height": "0",
        "format": "<!DOCTYPE html>\n<html lang=\"es\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Parking Lot Status</title>\n\n    <link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&family=Bebas+Neue&display=swap\"\n        rel=\"stylesheet\">\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css\"\n        integrity=\"sha512-z3gLpd7yknf1YoNbCzqRKc4qyor8gaKU1qmn+CShxbuBusANI9QpRohGBreCFkKxLhei6S9CQXFEbbKuqLg0DA==\"\n        crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\" />\n\n    <style>\n        body {\n            background-size: cover;\n            background-position: center;\n            background-repeat: no-repeat;\n            font-family: 'Roboto', sans-serif;\n            margin: 0;\n            padding: 20px;\n            background-image: url('https://www.scheidt-bachmann.de/fileadmin/images/parking-solutions/products/Head-Leeres-Parkhaus.jpg');\n            color: #333;\n            position: relative;\n            z-index: 0;\n        }\n\n        body::before {\n            content: \"\";\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100vw;\n            height: 100vh;\n            background-color: rgba(0, 0, 0, 0.5);\n            z-index: -1;\n        }\n\n        /* --- CSS MODIFICADO PARA EL BANNER SUPERIOR GRANDE --- */\n        .top-banner {\n            background-color: #333740;\n            /* Tono de plomo oscuro */\n            color: #E0E0E0;\n            text-align: center;\n            padding: 35px 20px;\n            /* Aumentado dr√°sticamente para m√°s altura */\n            font-size: 2.5rem;\n            /* Texto mucho m√°s grande */\n            font-family: 'Bebas Neue', sans-serif;\n            /* Misma fuente que los otros t√≠tulos */\n            font-weight: 500;\n            border-radius: 12px;\n            /* Bordes m√°s redondeados */\n            margin-bottom: 25px;\n            max-width: 900px;\n            /* Ancho m√°ximo igual a la cuadr√≠cula para alinear */\n            margin-left: auto;\n            margin-right: auto;\n            box-shadow: 0 6px 15px rgba(0, 0, 0, 0.25);\n        }\n\n        /* --- FIN DEL CSS MODIFICADO --- */\n\n        .dashboard-header {\n            text-align: center;\n            margin-bottom: 25px;\n            padding: 15px;\n            background-color: rgba(0, 0, 0, 0.6);\n            border-radius: 8px;\n            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n            max-width: 900px;\n            /* Ancho m√°ximo igual para alinear */\n            margin-left: auto;\n            margin-right: auto;\n        }\n\n        .dashboard-title {\n            font-family: 'Bebas Neue', sans-serif;\n            font-size: 2.8rem;\n            color: #ffffff;\n            margin: 0 0 10px 0;\n        }\n\n        .availability-counter {\n            font-size: 1.2rem;\n            color: #f0f0f0;\n        }\n\n        .grid-container {\n            display: grid;\n            grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));\n            grid-gap: 25px;\n            max-width: 900px;\n            margin-left: auto;\n            margin-right: auto;\n        }\n\n        .slot-card {\n            background-color: #ffffff;\n            border: 1px solid #e0e0e0;\n            border-left: 5px solid #4CAF50;\n            border-radius: 10px;\n            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\n            padding: 20px;\n            text-align: center;\n            position: relative;\n            cursor: pointer;\n            transition: transform 0.3s ease, box-shadow 0.3s ease, border-left-color 0.3s ease;\n        }\n\n        .slot-card:hover {\n            transform: translateY(-5px);\n            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);\n        }\n\n        .slot-card.occupied {\n            background-color: #fff7f7;\n            border-left-color: #F44336;\n        }\n\n        .slot-number {\n            font-family: 'Bebas Neue', sans-serif;\n            font-size: 2.5rem;\n            font-weight: 700;\n            margin-bottom: 15px;\n            color: #333333;\n        }\n\n        .slot-status-container {\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            gap: 10px;\n            font-size: 1.4rem;\n            font-weight: bold;\n        }\n\n        .slot-card.occupied .slot-status-container {\n            color: #D32F2F;\n        }\n\n        .slot-card:not(.occupied) .slot-status-container {\n            color: #388E3C;\n        }\n\n        .history-list {\n            margin-top: 20px;\n            font-size: 0.9rem;\n            max-height: 150px;\n            overflow-y: auto;\n            padding-right: 10px;\n            text-align: left;\n            border-top: 1px solid #eaeaea;\n            margin-left: -20px;\n            margin-right: -20px;\n            padding-left: 20px;\n            padding-top: 10px;\n            background-color: #fcfcfc;\n        }\n\n        .history-item {\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            padding: 8px 10px;\n            border-bottom: 1px solid #f0f0f0;\n        }\n\n        .history-item:last-child {\n            border-bottom: none;\n        }\n\n        .history-item .status-ocupado {\n            color: #D32F2F;\n        }\n\n        .history-item .status-libre {\n            color: #388E3C;\n        }\n\n        .history-item .fas {\n            margin-right: 8px;\n        }\n\n        .history-time {\n            color: #777777;\n            font-size: 0.8rem;\n        }\n\n        .hidden {\n            display: none;\n        }\n    </style>\n</head>\n\n<body>   \n    <div class=\"dashboard-header\">\n        <div class=\"dashboard-title\">PARKING LOT STATUS</div>\n        <div id=\"availability-counter\" class=\"availability-counter\">Calculando...</div>\n    </div>\n\n    <div class=\"grid-container\">\n    </div>\n\n    <script>\n        (function(scope) {\n            if (!scope.slotData) {\n                scope.slotData = {};\n                for (let i = 1; i <= 12; i++) {\n                    scope.slotData[i] = {\n                        current: 'Libre',\n                        history: []\n                    };\n                }\n            }\n\n            function updateAvailabilityCounter() {\n                let availableSlots = 0;\n                for (let i = 1; i <= 12; i++) {\n                    if (scope.slotData[i] && scope.slotData[i].current === 'Libre') {\n                        availableSlots++;\n                    }\n                }\n                const counterElement = document.getElementById('availability-counter');\n                if (counterElement) {\n                    counterElement.textContent = `${availableSlots} / 12 Espacios Disponibles`;\n                }\n            }\n\n            function renderSlots() {\n                const container = document.querySelector('.grid-container');\n                if (!container) return;\n                container.innerHTML = '';\n\n                for (let i = 1; i <= 12; i++) {\n                    const slotInfo = scope.slotData[i];\n                    if (!slotInfo) continue;\n\n                    const card = document.createElement('div');\n                    card.className = 'slot-card';\n                    card.setAttribute('data-slot', i);\n\n                    const numberEl = document.createElement('div');\n                    numberEl.className = 'slot-number';\n                    numberEl.textContent = 'SLOT ' + i;\n                    card.appendChild(numberEl);\n\n                    const statusContainer = document.createElement('div');\n                    statusContainer.className = 'slot-status-container';\n\n                    let iconHTML = '';\n                    if (slotInfo.current === 'Ocupado') {\n                        card.classList.add('occupied');\n                        iconHTML = '<i class=\"fas fa-car\"></i>';\n                    } else {\n                        iconHTML = '<i class=\"fas fa-parking\"></i>';\n                    }\n\n                    statusContainer.innerHTML = `\n                        ${iconHTML}\n                        <span>${slotInfo.current}</span>\n                    `;\n                    card.appendChild(statusContainer);\n\n                    const histContainer = document.createElement('div');\n                    histContainer.className = 'history-list hidden';\n                    histContainer.setAttribute('id', 'history-' + i);\n\n                    slotInfo.history.forEach(item => {\n                        const itemDiv = document.createElement('div');\n                        itemDiv.className = 'history-item';\n                        let statusIcon = (item.status === 'Ocupado') \n                            ? '<i class=\"fas fa-times-circle status-ocupado\"></i>'\n                            : '<i class=\"fas fa-check-circle status-libre\"></i>';\n                        let statusClass = (item.status === 'Ocupado') ? 'status-ocupado' : 'status-libre';\n                        itemDiv.innerHTML = `<div>${statusIcon}<span class=\"status-text ${statusClass}\">${item.status}</span></div><span class=\"history-time\">${new Date(item.time).toLocaleString()}</span>`;\n                        histContainer.appendChild(itemDiv);\n                    });\n                    card.appendChild(histContainer);\n\n                    card.addEventListener('click', () => {\n                        document.getElementById('history-' + i).classList.toggle('hidden');\n                    });\n                    \n                    container.appendChild(card);\n                }\n                updateAvailabilityCounter();\n            }\n\n            scope.$watch('msg.payload', function(newVal) {\n                if (!newVal || typeof newVal.slot === 'undefined' || typeof newVal.status !== 'string') return;\n                \n                const rawStatus = newVal.status.trim().toLowerCase();\n                let normalizedStatus = (rawStatus === 'ocupado') ? 'Ocupado' : 'Libre';\n\n                const slotNum = parseInt(newVal.slot, 10);\n                if (isNaN(slotNum) || slotNum < 1 || slotNum > 12) return;\n                \n                if (!scope.slotData[slotNum]) {\n                    scope.slotData[slotNum] = { current: 'Libre', history: [] };\n                }\n\n                const time = newVal.time || new Date().toISOString();\n                scope.slotData[slotNum].current = normalizedStatus;\n                \n                const histArr = scope.slotData[slotNum].history;\n                if (histArr.length === 0 || histArr[0].status !== normalizedStatus) {\n                    histArr.unshift({ status: normalizedStatus, time: time });\n                    if (histArr.length > 10) histArr.pop();\n                }\n                renderSlots();\n            });\n\n            function initialRender() {\n                if (document.querySelector('.grid-container')) {\n                    renderSlots();\n                } else {\n                    setTimeout(initialRender, 50);\n                }\n            }\n            setTimeout(initialRender, 0);\n\n        })(scope);\n    </script>\n\n</body>\n\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 840,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "2baa406d869cd04d",
        "type": "mqtt-broker",
        "name": "",
        "broker": "broker.hivemq.com",
        "port": 1883,
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": 4,
        "keepalive": 60,
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "0e938a56db5f14f2",
        "type": "ui_group",
        "name": "Parqueadero Inteligente",
        "tab": "63331522e4caaa13",
        "order": 1,
        "disp": true,
        "width": "26",
        "collapse": false,
        "className": ""
    },
    {
        "id": "63331522e4caaa13",
        "type": "ui_tab",
        "name": "Parqueadero Inteligente",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    }
]